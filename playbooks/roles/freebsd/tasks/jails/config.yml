---

- name: check jail's autorun status
  stat:
    path=/usr/local/etc/ezjail/{{ jail_name }}.norun
  register: jail_norun

- name: set jail autorun to 'run'
  shell: ezjail-admin config -r run {{ jail_name | quote }}
  changed_when: false
  always_run: yes
  when:  hostvars[jail].jail_autorun and jail_norun.stat.exists == true

- name: set jail autorun to 'norun'
  shell: ezjail-admin config -r norun {{ jail_name | quote }}
  changed_when: false
  always_run: yes
  when: not hostvars[jail].jail_autorun and jail_norun.stat.exists == false

- name: check whether jail's ezjail config exists
  stat:
    path=/usr/local/etc/ezjail/{{ jail_name }}
  register: jail_config

- name: check whether jail's /etc/resolv.conf exists
  copy:
    src=/etc/resolv.conf
    dest=/usr/jails/{{ jail_name }}/etc/resolv.conf
    owner=0
    group=0
    mode=0644
    remote_src=yes
  changed_when: false
  when: jail_config.stat.exists == true

- set_fact:
    provide: "{{ hostvars[jail].provides | default([]) }}"

# See man rcorder
- name: set jail provisions
  replace: '
    dest=/usr/local/etc/ezjail/{{ jail_name }}
    regexp="^# PROVIDE: .*$"
    replace="# PROVIDE: {{ provide|join(\" \") }}"
  '
  when: jail_config.stat.exists == true

- name: set jail requirements
  replace: '
    dest=/usr/local/etc/ezjail/{{ jail_name }}
    regexp="^# REQUIRE: .*$"
    replace="# REQUIRE: {{ hostvars[jail].requires|join(\" \") }}"
  '
  when: jail_config.stat.exists == true

- name: set jail precedence
  replace: '
    dest=/usr/local/etc/ezjail/{{ jail_name }}
    regexp="^# BEFORE: .*$"
    replace="# BEFORE: {{ hostvars[jail].before|join(\" \") }}"
  '
  when: jail_config.stat.exists == true

- name: set jail zfs datasets
  replace:
    dest='/usr/local/etc/ezjail/{{ jail_name }}'
    regexp='^(export jail\_{{ jail_name }}\_zfs_datasets=").*(")$'
    replace='\1{{ zfs_datasets }}\2'
  when: jail_config_exists.stat.exists == true
  notify: restart jail

- name: set jail parameters
  replace:
    dest='/usr/local/etc/ezjail/{{ jail_name }}'
    regexp='^(export jail\_{{ jail_name }}\_parameters=").*(")$'
    replace='\1{{ parameters }}\2'
  when: jail_config_exists.stat.exists == true
  notify: restart jail

- name: set jail mounts
  template: src=etc/fstab.jail.j2
    dest=/etc/fstab.{{ jail_name }}
    owner=0
    group=0
    mode=0664
  notify: restart jail
  tags: set_jail_mounts

- set_fact:
    outer_item: "{{ item }}"

# commented until ansible 2.1 is released
# - name: create jail mount destination if necessary
#   file:
#     path="{{ item_foo['on'] }}"
#     state=directory
#     owner=0
#     group=0
#     mode=0750
#   with_items: "{{ jail_mounts }}"
#   loop_control:
#     loop_var: item_foo

...
