---

- name: find obsolete nginx configs
  find:
    paths:
      - "/usr/local/etc/nginx/sites-available"
      - "/usr/local/etc/nginx/sites-enabled"
  register: config_list
  tags: rproxy_configs

- name: delete obsolete nginx configs
  file:
    path={{ item.path }}
    state=absent
  with_items: "{{ config_list.files }}"
  when: (([(item.path|basename|splitext).0]|difference(proxied_list)|length)==1 and (item.path|basename != 'default.conf'))
  no_log: true
  tags: rproxy_configs

- name: Create /usr/local/etc/nginx/sites-available directory
  file:
    path=/usr/local/etc/nginx/sites-available
    state=directory
    owner=0
    group=0
    mode=0755
  tags: rproxy_configs

- name: Create /usr/local/etc/nginx/sites-enabled directory
  file:
    path=/usr/local/etc/nginx/sites-enabled
    state=directory
    owner=0
    group=0
    mode=0755
  tags: rproxy_configs

- name: set up defaults
  template: src=usr/local/etc/nginx/default.conf.j2
    dest="/usr/local/etc/nginx/sites-available/default.conf"
    owner=0
    group=0
    mode=0644
  notify: reload nginx
  tags: rproxy_configs

- name: Create links for sites-enabled defaults
  file:
    state=link
    src=/usr/local/etc/nginx/sites-available/default.conf
    dest=/usr/local/etc/nginx/sites-enabled/default.conf
  notify: reload nginx
  tags: rproxy_configs

- name: set up proxy redirections
  template: src=usr/local/etc/nginx/site.conf.j2
    dest="/usr/local/etc/nginx/sites-available/{{ hostvars[item].jail_name }}.conf"
    owner=0
    group=0
    mode=0644
  with_items: "{{ groups['http_proxied'] }}"
  notify: reload nginx
  tags: rproxy_configs

- name: Create links for sites-enabled
  file:
    state=link
    src=/usr/local/etc/nginx/sites-available/{{ hostvars[item].jail_name }}.conf
    dest=/usr/local/etc/nginx/sites-enabled/{{ hostvars[item].jail_name }}.conf
  with_items: "{{ groups['http_proxied'] }}"
  notify: reload nginx
  tags: rproxy_configs

...
